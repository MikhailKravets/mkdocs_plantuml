name: Test, Linter

on:
  pull_request:
    branches: [ "master", "*.*.*", ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13"]
    outputs:
      coverage: ${{ steps.test.outputs.coverage }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Pipx
        run: |
          sudo apt install pipx
          pipx ensurepath

      - name: Install Poetry
        run: pipx install poetry

      - name: Cache poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: poetry install

      - name: Lint with flake8
        run: poetry run flake8 .
        continue-on-error: true

      - id: test
        name: Test with pytest
        run: poetry run pytest --cov-report term --cov=mkdocs_puml -q tests/
